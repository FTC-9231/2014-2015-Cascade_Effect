#pragma config(Hubs,  S1, HTMotor,  HTServo,  none,     none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Motor,  mtr_S1_C1_1,     motorD,        tmotorTetrix, openLoop,)
#pragma config(Motor,  mtr_S1_C1_2,     motorE,        tmotorTetrix, openLoop, reversed)
#pragma config(Servo,  srvo_S1_C2_1,    servo1,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_2,    servo2,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
//YOU HAVE TO HAVE THIS IN THE SAME FOLDER AS THE FILE FOR IT TO WORK LIKE SERIOUSLY DONT ASK ME WHY IT ISNT WORKING IF YOU DONT HAVE THE FILE DOWNLOADED -- Jordan
void goRight(int degree){
//Time in seconds, degree in... degrees
	nMotorEncoder[motorD] = 0;
	while(nMotorEncoder[motorD] < degree(//need to find formula for degree -> encoder))
	motor[motorD] = 100;
	motor[motorE] = -100;
	sleep(degree*6);
}}
void goLeft(int degree){
//Time in seconds, degree in... degrees
	nMotorEncoder[motorD] = 0;
	while(nMotorEncoder[motorD] < -(degree())){
	motor[motorD] = -100;
	motor[motorE] = 100;
}}
void straight(float time, int speed){
// Time in seconds, speed in percent
	nMotorEncoder[motorD] = 0;
	while(nMotorEncoder[motorD] < -(time(360))){
	motor[motorD] = speed;
	motor[motorE] = speed;
}}
void back(float time, int speed){
// Time in seconds, speed in percent
	nMotorEncoder[motorD] = 0;
	while(nMotorEncoder[motorD] < time(360))
	motor[motorD] = -speed;
	motor[motorE] = -speed;
}
void stopMotors(int time){
	nMotorEncoder[motorD] = 0;
	motor[motorD] = 0;
	motor[motorE] = 0;
	sleep(time * 1000);

}
